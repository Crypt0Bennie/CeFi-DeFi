{
	"id": "6dd4f45ecbf4d2347a05fae26e6db495",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"simple-token(copy)/simple-token.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.10;\n\nimport \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title Simple Token\n * @author Breakthrough Labs Inc.\n * @notice Token, ERC20, Fixed Supply\n * @custom:version 1.0.7\n * @custom:address 4\n * @custom:default-precision 18\n * @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n * new tokens can never be created.\n * @dev ERC20 token with the following features:\n *\n *  - Premint your total supply.\n *  - No minting function. This allows users to comfortably know the future supply of the token.\n *\n */\n\ncontract FixedToken is ERC20 {\n    /**\n     * @param name Token Name\n     * @param symbol Token Symbol\n     * @param totalSupply Token Supply\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 totalSupply\n    ) payable ERC20(name, symbol) {\n        _mint(msg.sender, totalSupply);\n    }\n}\n\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"simple-token(copy)/simple-token.sol": {
				"FixedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "4",
						"custom:default-precision": "18",
						"custom:simple-description": "Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.",
						"custom:version": "1.0.7",
						"details": "ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"name": "Token Name",
									"symbol": "Token Symbol",
									"totalSupply": "Token Supply"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "Simple Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token(copy)/simple-token.sol\":2054:2234  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  dup3\n  mload\n    /* \"simple-token(copy)/simple-token.sol\":2173:2177  name */\n  dup4\n  swap1\n    /* \"simple-token(copy)/simple-token.sol\":2179:2185  symbol */\n  dup4\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_6\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token(copy)/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  tag_10\n    /* \"simple-token(copy)/simple-token.sol\":2203:2213  msg.sender */\n  caller\n    /* \"simple-token(copy)/simple-token.sol\":2215:2226  totalSupply */\n  dup3\n    /* \"simple-token(copy)/simple-token.sol\":2197:2202  _mint */\n  shl(0x20, tag_11)\n    /* \"simple-token(copy)/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"simple-token(copy)/simple-token.sol\":2054:2234  constructor(... */\n  pop\n  pop\n  pop\n    /* \"simple-token(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  jump(tag_41)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9758:9779  account != address(0) */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1866:1868   */\n  0x20\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1848:1869   */\n  mstore\n    /* \"#utility.yul\":1905:1907   */\n  0x1f\n    /* \"#utility.yul\":1885:1903   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1878:1908   */\n  mstore\n    /* \"#utility.yul\":1944:1977   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":1924:1942   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1917:1978   */\n  mstore\n    /* \"#utility.yul\":1995:2013   */\n  0x64\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9902:9908  amount */\n  dup1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9898  _totalSupply */\n  0x02\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9908  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  dup1\n  sload\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup4\n  swap3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_21\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup5\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_20\n  jump\t// in\ntag_21:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":2400:2425   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:9979  0 */\n  0x00\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":2388:2390   */\n  0x20\n    /* \"#utility.yul\":2373:2391   */\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"simple-token(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_28\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_31\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_34)\ntag_31:\n  dup3\n  0x1f\n  lt\n  tag_32\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_34)\ntag_32:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_34\n  jumpi\n  swap2\n  dup3\n  add\ntag_33:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_34\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_33)\ntag_34:\n  pop\n  tag_35\n  swap3\n  swap2\n  pop\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n  swap1\n  jump\t// out\ntag_36:\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_37)\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_40:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_44:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_46\n  tag_39\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_48\n  tag_39\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_49:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_50:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_53:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1659   */\ntag_2:\n    /* \"#utility.yul\":1144:1150   */\n  0x00\n    /* \"#utility.yul\":1152:1158   */\n  dup1\n    /* \"#utility.yul\":1160:1166   */\n  0x00\n    /* \"#utility.yul\":1213:1215   */\n  0x60\n    /* \"#utility.yul\":1201:1210   */\n  dup5\n    /* \"#utility.yul\":1192:1199   */\n  dup7\n    /* \"#utility.yul\":1188:1211   */\n  sub\n    /* \"#utility.yul\":1184:1216   */\n  slt\n    /* \"#utility.yul\":1181:1233   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1229:1230   */\n  0x00\n    /* \"#utility.yul\":1226:1227   */\n  dup1\n    /* \"#utility.yul\":1219:1231   */\n  revert\n    /* \"#utility.yul\":1181:1233   */\ntag_55:\n    /* \"#utility.yul\":1256:1272   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1321:1335   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1318:1352   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1348:1349   */\n  0x00\n    /* \"#utility.yul\":1345:1346   */\n  dup1\n    /* \"#utility.yul\":1338:1350   */\n  revert\n    /* \"#utility.yul\":1318:1352   */\ntag_56:\n    /* \"#utility.yul\":1371:1432   */\n  tag_57\n    /* \"#utility.yul\":1424:1431   */\n  dup8\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1404:1413   */\n  dup9\n    /* \"#utility.yul\":1400:1422   */\n  add\n    /* \"#utility.yul\":1371:1432   */\n  tag_40\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1361:1432   */\n  swap5\n  pop\n    /* \"#utility.yul\":1478:1480   */\n  0x20\n    /* \"#utility.yul\":1467:1476   */\n  dup7\n    /* \"#utility.yul\":1463:1481   */\n  add\n    /* \"#utility.yul\":1457:1482   */\n  mload\n    /* \"#utility.yul\":1441:1482   */\n  swap2\n  pop\n    /* \"#utility.yul\":1507:1509   */\n  dup1\n    /* \"#utility.yul\":1497:1505   */\n  dup3\n    /* \"#utility.yul\":1494:1510   */\n  gt\n    /* \"#utility.yul\":1491:1527   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1523:1524   */\n  0x00\n    /* \"#utility.yul\":1520:1521   */\n  dup1\n    /* \"#utility.yul\":1513:1525   */\n  revert\n    /* \"#utility.yul\":1491:1527   */\ntag_58:\n  pop\n    /* \"#utility.yul\":1546:1609   */\n  tag_59\n    /* \"#utility.yul\":1601:1608   */\n  dup7\n    /* \"#utility.yul\":1590:1598   */\n  dup3\n    /* \"#utility.yul\":1579:1588   */\n  dup8\n    /* \"#utility.yul\":1575:1599   */\n  add\n    /* \"#utility.yul\":1546:1609   */\n  tag_40\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1536:1609   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1649:1651   */\n  0x40\n    /* \"#utility.yul\":1638:1647   */\n  dup5\n    /* \"#utility.yul\":1634:1652   */\n  add\n    /* \"#utility.yul\":1628:1653   */\n  mload\n    /* \"#utility.yul\":1618:1653   */\n  swap1\n  pop\n    /* \"#utility.yul\":1036:1659   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2024:2249   */\ntag_20:\n    /* \"#utility.yul\":2064:2067   */\n  0x00\n    /* \"#utility.yul\":2095:2096   */\n  dup3\n    /* \"#utility.yul\":2091:2097   */\n  not\n    /* \"#utility.yul\":2088:2089   */\n  dup3\n    /* \"#utility.yul\":2085:2098   */\n  gt\n    /* \"#utility.yul\":2082:2218   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2140:2150   */\n  0x4e487b71\n    /* \"#utility.yul\":2135:2138   */\n  0xe0\n    /* \"#utility.yul\":2131:2151   */\n  shl\n    /* \"#utility.yul\":2128:2129   */\n  0x00\n    /* \"#utility.yul\":2121:2152   */\n  mstore\n    /* \"#utility.yul\":2175:2179   */\n  0x11\n    /* \"#utility.yul\":2172:2173   */\n  0x04\n    /* \"#utility.yul\":2165:2180   */\n  mstore\n    /* \"#utility.yul\":2203:2207   */\n  0x24\n    /* \"#utility.yul\":2200:2201   */\n  0x00\n    /* \"#utility.yul\":2193:2208   */\n  revert\n    /* \"#utility.yul\":2082:2218   */\ntag_62:\n  pop\n    /* \"#utility.yul\":2234:2243   */\n  add\n  swap1\n    /* \"#utility.yul\":2024:2249   */\n  jump\t// out\n    /* \"#utility.yul\":2436:2816   */\ntag_29:\n    /* \"#utility.yul\":2515:2516   */\n  0x01\n    /* \"#utility.yul\":2511:2523   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2558:2570   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2579:2640   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2633:2637   */\n  0x7f\n    /* \"#utility.yul\":2625:2631   */\n  dup3\n    /* \"#utility.yul\":2621:2638   */\n  and\n    /* \"#utility.yul\":2611:2638   */\n  swap2\n  pop\n    /* \"#utility.yul\":2579:2640   */\ntag_65:\n    /* \"#utility.yul\":2686:2688   */\n  0x20\n    /* \"#utility.yul\":2678:2684   */\n  dup3\n    /* \"#utility.yul\":2675:2689   */\n  lt\n    /* \"#utility.yul\":2655:2673   */\n  dup2\n    /* \"#utility.yul\":2652:2690   */\n  eq\n    /* \"#utility.yul\":2649:2810   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2732:2742   */\n  0x4e487b71\n    /* \"#utility.yul\":2727:2730   */\n  0xe0\n    /* \"#utility.yul\":2723:2743   */\n  shl\n    /* \"#utility.yul\":2720:2721   */\n  0x00\n    /* \"#utility.yul\":2713:2744   */\n  mstore\n    /* \"#utility.yul\":2767:2771   */\n  0x22\n    /* \"#utility.yul\":2764:2765   */\n  0x04\n    /* \"#utility.yul\":2757:2772   */\n  mstore\n    /* \"#utility.yul\":2795:2799   */\n  0x24\n    /* \"#utility.yul\":2792:2793   */\n  0x00\n    /* \"#utility.yul\":2785:2800   */\n  revert\n    /* \"#utility.yul\":2649:2810   */\ntag_66:\n  pop\n    /* \"#utility.yul\":2436:2816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_41:\n    /* \"simple-token(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n      swap4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_32:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_79\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      tag_86\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7322  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      tag_98\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8065  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8050  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8014:8066  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_79:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      tag_117\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12201:12206  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12208:12215  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12200  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12216  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12246  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b20276c8eae2ef715b5ae7e4a57026f75aa32008caf296e4c21bc131c8f6db464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_430": {
									"entryPoint": 115,
									"id": 430,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2818:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:5"
															},
															"nodeType": "YulIf",
															"src": "921:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:488:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1219:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1192:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1201:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1184:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:32:5"
															},
															"nodeType": "YulIf",
															"src": "1181:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1242:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1256:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1246:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1281:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1299:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1303:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1285:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1336:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1348:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1338:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1338:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1332:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1321:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:14:5"
															},
															"nodeType": "YulIf",
															"src": "1318:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1424:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1371:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1478:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1445:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1511:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1523:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1513:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1513:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1497:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1507:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1494:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:16:5"
															},
															"nodeType": "YulIf",
															"src": "1491:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1536:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1590:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1601:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1546:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1618:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1638:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1634:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1121:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1132:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1144:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1152:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1160:6:5",
														"type": ""
													}
												],
												"src": "1036:623:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1838:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1848:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1889:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1900:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1885:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1885:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1944:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1917:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1917:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1987:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1999:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1995:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1987:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1815:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1829:4:5",
														"type": ""
													}
												],
												"src": "1664:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2072:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2107:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2128:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2135:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2140:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2131:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2131:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2121:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2121:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2172:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2175:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2165:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2165:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2165:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2203:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2193:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2193:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2088:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2095:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2091:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2085:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:13:5"
															},
															"nodeType": "YulIf",
															"src": "2082:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2227:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2238:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2241:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2055:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2058:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2064:3:5",
														"type": ""
													}
												],
												"src": "2024:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2355:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2365:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2365:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2418:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2400:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2324:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2335:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2346:4:5",
														"type": ""
													}
												],
												"src": "2254:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2491:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2501:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2518:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2532:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2562:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2558:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2536:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2611:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2625:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2621:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2621:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2589:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:26:5"
															},
															"nodeType": "YulIf",
															"src": "2579:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2699:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2727:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2732:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2723:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2723:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2713:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2713:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2713:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2767:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2757:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2757:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2757:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2795:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2785:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2655:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2678:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2686:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2675:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2652:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:38:5"
															},
															"nodeType": "YulIf",
															"src": "2649:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2471:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2480:6:5",
														"type": ""
													}
												],
												"src": "2436:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405162000c3c38038062000c3c8339810160408190526200002691620002ce565b8251839083906200003f9060039060208501906200015b565b508051620000559060049060208401906200015b565b5050506200006a33826200007360201b60201c565b505050620003a5565b6001600160a01b038216620000ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000e2919062000341565b90915550506001600160a01b038216600090815260208190526040812080548392906200011190849062000341565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001699062000368565b90600052602060002090601f0160209004810192826200018d5760008555620001d8565b82601f10620001a857805160ff1916838001178555620001d8565b82800160010185558215620001d8579182015b82811115620001d8578251825591602001919060010190620001bb565b50620001e6929150620001ea565b5090565b5b80821115620001e65760008155600101620001eb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200022957600080fd5b81516001600160401b038082111562000246576200024662000201565b604051601f8301601f19908116603f0116810190828211818310171562000271576200027162000201565b816040528381526020925086838588010111156200028e57600080fd5b600091505b83821015620002b2578582018301518183018401529082019062000293565b83821115620002c45760008385830101525b9695505050505050565b600080600060608486031215620002e457600080fd5b83516001600160401b0380821115620002fc57600080fd5b6200030a8783880162000217565b945060208601519150808211156200032157600080fd5b50620003308682870162000217565b925050604084015190509250925092565b600082198211156200036357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200037d57607f821691505b602082108114156200039f57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620003b56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202b20276c8eae2ef715b5ae7e4a57026f75aa32008caf296e4c21bc131c8f6db464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xC3C CODESIZE SUB DUP1 PUSH3 0xC3C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x26 SWAP2 PUSH3 0x2CE JUMP JUMPDEST DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH3 0x3F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x15B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x55 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x15B JUMP JUMPDEST POP POP POP PUSH3 0x6A CALLER DUP3 PUSH3 0x73 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xE2 SWAP2 SWAP1 PUSH3 0x341 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x111 SWAP1 DUP5 SWAP1 PUSH3 0x341 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x169 SWAP1 PUSH3 0x368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x18D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1D8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1A8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1D8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1D8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1D8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1BB JUMP JUMPDEST POP PUSH3 0x1E6 SWAP3 SWAP2 POP PUSH3 0x1EA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1E6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x246 JUMPI PUSH3 0x246 PUSH3 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x271 JUMPI PUSH3 0x271 PUSH3 0x201 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2B2 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x293 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x30A DUP8 DUP4 DUP9 ADD PUSH3 0x217 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x330 DUP7 DUP3 DUP8 ADD PUSH3 0x217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x363 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x37D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x39F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x3B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B KECCAK256 0x27 PUSH13 0x8EAE2EF715B5AE7E4A57026F75 0xAA ORIGIN STOP DUP13 0xAF 0x29 PUSH15 0x4C21BC131C8F6DB464736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "1900:336:0:-:0;;;2054:180;;;;;;;;;;;;;;;;;;:::i;:::-;3317:13:1;;2173:4:0;;2179:6;;3317:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3340:17:1;;;;:7;;:17;;;;;:::i;:::-;;3251:113;;2197:30:0::1;2203:10;2215:11;2197:5;;;:30;;:::i;:::-;2054:180:::0;;;1900:336;;9675:389:1;-1:-1:-1;;;;;9758:21:1;;9750:65;;;;-1:-1:-1;;;9750:65:1;;1866:2:5;9750:65:1;;;1848:21:5;1905:2;1885:18;;;1878:30;1944:33;1924:18;;;1917:61;1995:18;;9750:65:1;;;;;;;;9902:6;9886:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9918:18:1;;:9;:18;;;;;;;;;;:28;;9940:6;;9918:9;:28;;9940:6;;9918:28;:::i;:::-;;;;-1:-1:-1;;9961:37:1;;2400:25:5;;;-1:-1:-1;;;;;9961:37:1;;;9978:1;;9961:37;;2388:2:5;2373:18;9961:37:1;;;;;;;9675:389;;:::o;1900:336:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1900:336:0;;;-1:-1:-1;1900:336:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:5:o;1036:623::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:5;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1536:73;;;1649:2;1638:9;1634:18;1628:25;1618:35;;1036:623;;;;;:::o;2024:225::-;2064:3;2095:1;2091:6;2088:1;2085:13;2082:136;;;2140:10;2135:3;2131:20;2128:1;2121:31;2175:4;2172:1;2165:15;2203:4;2200:1;2193:15;2082:136;-1:-1:-1;2234:9:5;;2024:225::o;2436:380::-;2515:1;2511:12;;;;2558;;;2579:61;;2633:4;2625:6;2621:17;2611:27;;2579:61;2686:2;2678:6;2675:14;2655:18;2652:38;2649:161;;;2732:10;2727:3;2723:20;2720:1;2713:31;2767:4;2764:1;2757:15;2795:4;2792:1;2785:15;2649:161;;2436:380;;;:::o;:::-;1900:336:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_547": {
									"entryPoint": 856,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_590": {
									"entryPoint": 1148,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_374": {
									"entryPoint": 1270,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_169": {
									"entryPoint": 813,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_194": {
									"entryPoint": 562,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_297": {
									"entryPoint": 671,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_256": {
									"entryPoint": 622,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_82": {
									"entryPoint": 416,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_92": {
									"entryPoint": 656,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 586,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_151": {
									"entryPoint": 799,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:5"
															},
															"nodeType": "YulIf",
															"src": "443:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:5"
															},
															"nodeType": "YulIf",
															"src": "713:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:5",
														"type": ""
													}
												],
												"src": "616:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:5"
															},
															"nodeType": "YulIf",
															"src": "891:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:5",
														"type": ""
													}
												],
												"src": "794:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:5",
														"type": ""
													}
												],
												"src": "1053:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:5",
														"type": ""
													}
												],
												"src": "1245:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:5"
															},
															"nodeType": "YulIf",
															"src": "1541:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:5",
														"type": ""
													}
												],
												"src": "1427:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:5",
														"type": ""
													}
												],
												"src": "1760:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:5"
															},
															"nodeType": "YulIf",
															"src": "2029:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:5",
														"type": ""
													}
												],
												"src": "1949:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:5"
															},
															"nodeType": "YulIf",
															"src": "2237:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:5",
														"type": ""
													}
												],
												"src": "2140:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:5"
															},
															"nodeType": "YulIf",
															"src": "2548:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:5"
															},
															"nodeType": "YulIf",
															"src": "2618:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:5",
														"type": ""
													}
												],
												"src": "2405:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:5"
															},
															"nodeType": "YulIf",
															"src": "2848:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:5",
														"type": ""
													}
												],
												"src": "2790:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:5",
														"type": ""
													}
												],
												"src": "3020:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:5",
														"type": ""
													}
												],
												"src": "3426:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:5",
														"type": ""
													}
												],
												"src": "3831:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:5",
														"type": ""
													}
												],
												"src": "4234:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:5",
														"type": ""
													}
												],
												"src": "4592:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:5",
														"type": ""
													}
												],
												"src": "4998:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:5",
														"type": ""
													}
												],
												"src": "5402:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202b20276c8eae2ef715b5ae7e4a57026f75aa32008caf296e4c21bc131c8f6db464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B KECCAK256 0x27 PUSH13 0x8EAE2EF715B5AE7E4A57026F75 0xAA ORIGIN STOP DUP13 0xAF 0x29 PUSH15 0x4C21BC131C8F6DB464736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "1900:336:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;5706:197:1;1053:187:5;4517:106:1;4604:12;;4517:106;;;1391:25:5;;;1379:2;1364:18;4517:106:1;1245:177:5;6465:286:1;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;1902:36:5;;1890:2;1875:18;4366:91:1;1760:184:5;7146:234:1;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4781:18:1;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;;:::i;3429:98::-;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:4;5843:32:1;1992:10:4;5859:7:1;5868:6;5843:8;:32::i;:::-;-1:-1:-1;5892:4:1;;5706:197;-1:-1:-1;;;5706:197:1:o;6465:286::-;6592:4;1992:10:4;6648:38:1;6664:4;1992:10:4;6679:6:1;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:1;;6465:286;-1:-1:-1;;;;6465:286:1:o;7146:234::-;7234:4;1992:10:4;7288:64:1;1992:10:4;7304:7:1;7341:10;7313:25;1992:10:4;7304:7:1;7313:9;:25::i;:::-;:38;;;;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;7960:4;1992:10:4;7960:4:1;8041:25;1992:10:4;8058:7:1;8041:9;:25::i;:::-;8014:52;;8104:15;8084:16;:35;;8076:85;;;;-1:-1:-1;;;8076:85:1;;3222:2:5;8076:85:1;;;3204:21:5;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:5;;;3344:35;3396:19;;8076:85:1;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:4;5135:28:1;1992:10:4;5152:2:1;5156:6;5135:9;:28::i;5249:149::-;-1:-1:-1;;;;;5364:18:1;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149::o;11383:370::-;-1:-1:-1;;;;;11514:19:1;;11506:68;;;;-1:-1:-1;;;11506:68:1;;3628:2:5;11506:68:1;;;3610:21:5;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:5;;;3750:34;3801:19;;11506:68:1;3426:400:5;11506:68:1;-1:-1:-1;;;;;11592:21:1;;11584:68;;;;-1:-1:-1;;;11584:68:1;;4033:2:5;11584:68:1;;;4015:21:5;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:5;;;4155:32;4204:19;;11584:68:1;3831:398:5;11584:68:1;-1:-1:-1;;;;;11663:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1391:25:5;;;11714:32:1;;1364:18:5;11714:32:1;;;;;;;11383:370;;;:::o;12034:441::-;12164:24;12191:25;12201:5;12208:7;12191:9;:25::i;:::-;12164:52;;-1:-1:-1;;12230:16:1;:37;12226:243;;12311:6;12291:16;:26;;12283:68;;;;-1:-1:-1;;;12283:68:1;;4436:2:5;12283:68:1;;;4418:21:5;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;12283:68:1;4234:353:5;12283:68:1;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;-1:-1:-1;;;;;8874:18:1;;8866:68;;;;-1:-1:-1;;;8866:68:1;;4794:2:5;8866:68:1;;;4776:21:5;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:5;;;4916:35;4968:19;;8866:68:1;4592:401:5;8866:68:1;-1:-1:-1;;;;;8952:16:1;;8944:64;;;;-1:-1:-1;;;8944:64:1;;5200:2:5;8944:64:1;;;5182:21:5;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:5;;;5322:33;5372:19;;8944:64:1;4998:399:5;8944:64:1;-1:-1:-1;;;;;9090:15:1;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;-1:-1:-1;;;9115:72:1;;5604:2:5;9115:72:1;;;5586:21:5;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:5;;;5726:36;5779:19;;9115:72:1;5402:402:5;9115:72:1;-1:-1:-1;;;;;9221:15:1;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;-1:-1:-1;;;;;9318:26:1;9327:4;-1:-1:-1;;;;;9318:26:1;;9337:6;9318:26;;;;1391:25:5;;1379:2;1364:18;;1245:177;9318:26:1;;;;;;;;9355:37;13059:121;14:597:5;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:5:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:5;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2179,
									"end": 2185,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2179,
									"end": 2185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2203,
									"end": 2213,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2215,
									"end": 2226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2197,
									"end": 2202,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2202,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2197,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1866,
									"end": 1868,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1869,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1907,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1885,
									"end": 1903,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1885,
									"end": 1903,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1885,
									"end": 1903,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1878,
									"end": 1908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1977,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 1924,
									"end": 1942,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1924,
									"end": 1942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1924,
									"end": 1942,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1978,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9902,
									"end": 9908,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2425,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2400,
									"end": 2425,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2400,
									"end": 2425,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2390,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2373,
									"end": 2391,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 1158,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1166,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1215,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1201,
									"end": 1210,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1192,
									"end": 1199,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1211,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1184,
									"end": 1216,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1230,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1219,
									"end": 1231,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1181,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1272,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1335,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1346,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1350,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1318,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1424,
									"end": 1431,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1404,
									"end": 1413,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1400,
									"end": 1422,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1371,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 1432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1480,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1467,
									"end": 1476,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1482,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1482,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1507,
									"end": 1509,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1505,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1494,
									"end": 1510,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1524,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1513,
									"end": 1525,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1601,
									"end": 1608,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1590,
									"end": 1598,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1579,
									"end": 1588,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1575,
									"end": 1599,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1546,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1536,
									"end": 1609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1649,
									"end": 1651,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1647,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1652,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1628,
									"end": 1653,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1618,
									"end": 1653,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1659,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2024,
									"end": 2249,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2024,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2064,
									"end": 2067,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2095,
									"end": 2096,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2091,
									"end": 2097,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2088,
									"end": 2089,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2218,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2082,
									"end": 2218,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2140,
									"end": 2150,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2135,
									"end": 2138,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2131,
									"end": 2151,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2128,
									"end": 2129,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2152,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2175,
									"end": 2179,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2172,
									"end": 2173,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2165,
									"end": 2180,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2203,
									"end": 2207,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2200,
									"end": 2201,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2208,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2218,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2082,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2234,
									"end": 2243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2234,
									"end": 2243,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2024,
									"end": 2249,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2515,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2511,
									"end": 2523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2523,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2523,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2558,
									"end": 2570,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2558,
									"end": 2570,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2558,
									"end": 2570,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2579,
									"end": 2640,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2625,
									"end": 2631,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2621,
									"end": 2638,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2640,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2579,
									"end": 2640,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2686,
									"end": 2688,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2678,
									"end": 2684,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2675,
									"end": 2689,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2655,
									"end": 2673,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2652,
									"end": 2690,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2732,
									"end": 2742,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2727,
									"end": 2730,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2721,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2713,
									"end": 2744,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2771,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2764,
									"end": 2765,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2757,
									"end": 2772,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2795,
									"end": 2799,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2785,
									"end": 2800,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2649,
									"end": 2810,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2436,
									"end": 2816,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b20276c8eae2ef715b5ae7e4a57026f75aa32008caf296e4c21bc131c8f6db464736f6c634300080a0033",
									".code": [
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12201,
											"end": 12206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12208,
											"end": 12215,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"4\",\"custom:default-precision\":\"18\",\"custom:simple-description\":\"Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.\",\"custom:version\":\"1.0.7\",\"details\":\"ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"name\":\"Token Name\",\"symbol\":\"Token Symbol\",\"totalSupply\":\"Token Supply\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Simple Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token, ERC20, Fixed Supply\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token(copy)/simple-token.sol\":\"FixedToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token(copy)/simple-token.sol\":{\"keccak256\":\"0x2c6c431911f479d017a69e2d01cab0c6ae930e246ed33db40a2940a35006dc09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77d9ab54ff9dcafdbc33f31def4fa31e0e3ba972e85e501261a8e5ae926b1703\",\"dweb:/ipfs/QmYck78tGgQdee1CcdY7P6tFnJEks3cxZXts9dM1KzBxrx\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "simple-token(copy)/simple-token.sol:FixedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "simple-token(copy)/simple-token.sol:FixedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "simple-token(copy)/simple-token.sol:FixedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "simple-token(copy)/simple-token.sol:FixedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 55,
								"contract": "simple-token(copy)/simple-token.sol:FixedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Token, ERC20, Fixed Supply",
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n      swap4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_32:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_79\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      tag_86\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7322  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      tag_98\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8065  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8050  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8014:8066  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_79:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      tag_117\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12201:12206  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12208:12215  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12200  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12216  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12246  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201ce772700e6365d82f5db2f9ec1ff84c452ffed00710783249bcf6f8389bd67e64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:5"
															},
															"nodeType": "YulIf",
															"src": "921:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:5"
															},
															"nodeType": "YulIf",
															"src": "1164:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:5"
															},
															"nodeType": "YulIf",
															"src": "1301:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:5"
															},
															"nodeType": "YulIf",
															"src": "1474:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:5",
														"type": ""
													}
												],
												"src": "1036:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:5"
															},
															"nodeType": "YulIf",
															"src": "1746:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:5"
															},
															"nodeType": "YulIf",
															"src": "1816:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:5",
														"type": ""
													}
												],
												"src": "1603:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201ce772700e6365d82f5db2f9ec1ff84c452ffed00710783249bcf6f8389bd67e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xE7 PUSH19 0x700E6365D82F5DB2F9EC1FF84C452FFED00710 PUSH25 0x3249BCF6F8389BD67E64736F6C634300080A00330000000000 ",
							"sourceMap": "2676:11214:1:-:0;;;3251:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3317:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3340:17:1;;;;:7;;:17;;;;;:::i;:::-;;3251:113;;2676:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2676:11214:1;;;-1:-1:-1;2676:11214:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:5:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:5;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;2676:11214:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_547": {
									"entryPoint": 856,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_590": {
									"entryPoint": 1148,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_374": {
									"entryPoint": 1270,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_169": {
									"entryPoint": 813,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_194": {
									"entryPoint": 562,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_297": {
									"entryPoint": 671,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_256": {
									"entryPoint": 622,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_82": {
									"entryPoint": 416,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_92": {
									"entryPoint": 656,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 586,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_151": {
									"entryPoint": 799,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:5"
															},
															"nodeType": "YulIf",
															"src": "443:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:5"
															},
															"nodeType": "YulIf",
															"src": "713:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:5",
														"type": ""
													}
												],
												"src": "616:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:5"
															},
															"nodeType": "YulIf",
															"src": "891:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:5",
														"type": ""
													}
												],
												"src": "794:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:5",
														"type": ""
													}
												],
												"src": "1053:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:5",
														"type": ""
													}
												],
												"src": "1245:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:5"
															},
															"nodeType": "YulIf",
															"src": "1541:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:5",
														"type": ""
													}
												],
												"src": "1427:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:5",
														"type": ""
													}
												],
												"src": "1760:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:5"
															},
															"nodeType": "YulIf",
															"src": "2029:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:5",
														"type": ""
													}
												],
												"src": "1949:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:5"
															},
															"nodeType": "YulIf",
															"src": "2237:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:5",
														"type": ""
													}
												],
												"src": "2140:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:5"
															},
															"nodeType": "YulIf",
															"src": "2548:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:5"
															},
															"nodeType": "YulIf",
															"src": "2618:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:5",
														"type": ""
													}
												],
												"src": "2405:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:5"
															},
															"nodeType": "YulIf",
															"src": "2848:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:5",
														"type": ""
													}
												],
												"src": "2790:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:5",
														"type": ""
													}
												],
												"src": "3020:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:5",
														"type": ""
													}
												],
												"src": "3426:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:5",
														"type": ""
													}
												],
												"src": "3831:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:5",
														"type": ""
													}
												],
												"src": "4234:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:5",
														"type": ""
													}
												],
												"src": "4592:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:5",
														"type": ""
													}
												],
												"src": "4998:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:5",
														"type": ""
													}
												],
												"src": "5402:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201ce772700e6365d82f5db2f9ec1ff84c452ffed00710783249bcf6f8389bd67e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xE7 PUSH19 0x700E6365D82F5DB2F9EC1FF84C452FFED00710 PUSH25 0x3249BCF6F8389BD67E64736F6C634300080A00330000000000 ",
							"sourceMap": "2676:11214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;5706:197:1;1053:187:5;4517:106:1;4604:12;;4517:106;;;1391:25:5;;;1379:2;1364:18;4517:106:1;1245:177:5;6465:286:1;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;1902:36:5;;1890:2;1875:18;4366:91:1;1760:184:5;7146:234:1;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4781:18:1;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;;:::i;3429:98::-;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:4;5843:32:1;1992:10:4;5859:7:1;5868:6;5843:8;:32::i;:::-;-1:-1:-1;5892:4:1;;5706:197;-1:-1:-1;;;5706:197:1:o;6465:286::-;6592:4;1992:10:4;6648:38:1;6664:4;1992:10:4;6679:6:1;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:1;;6465:286;-1:-1:-1;;;;6465:286:1:o;7146:234::-;7234:4;1992:10:4;7288:64:1;1992:10:4;7304:7:1;7341:10;7313:25;1992:10:4;7304:7:1;7313:9;:25::i;:::-;:38;;;;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;7960:4;1992:10:4;7960:4:1;8041:25;1992:10:4;8058:7:1;8041:9;:25::i;:::-;8014:52;;8104:15;8084:16;:35;;8076:85;;;;-1:-1:-1;;;8076:85:1;;3222:2:5;8076:85:1;;;3204:21:5;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:5;;;3344:35;3396:19;;8076:85:1;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:4;5135:28:1;1992:10:4;5152:2:1;5156:6;5135:9;:28::i;5249:149::-;-1:-1:-1;;;;;5364:18:1;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149::o;11383:370::-;-1:-1:-1;;;;;11514:19:1;;11506:68;;;;-1:-1:-1;;;11506:68:1;;3628:2:5;11506:68:1;;;3610:21:5;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:5;;;3750:34;3801:19;;11506:68:1;3426:400:5;11506:68:1;-1:-1:-1;;;;;11592:21:1;;11584:68;;;;-1:-1:-1;;;11584:68:1;;4033:2:5;11584:68:1;;;4015:21:5;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:5;;;4155:32;4204:19;;11584:68:1;3831:398:5;11584:68:1;-1:-1:-1;;;;;11663:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1391:25:5;;;11714:32:1;;1364:18:5;11714:32:1;;;;;;;11383:370;;;:::o;12034:441::-;12164:24;12191:25;12201:5;12208:7;12191:9;:25::i;:::-;12164:52;;-1:-1:-1;;12230:16:1;:37;12226:243;;12311:6;12291:16;:26;;12283:68;;;;-1:-1:-1;;;12283:68:1;;4436:2:5;12283:68:1;;;4418:21:5;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;12283:68:1;4234:353:5;12283:68:1;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;-1:-1:-1;;;;;8874:18:1;;8866:68;;;;-1:-1:-1;;;8866:68:1;;4794:2:5;8866:68:1;;;4776:21:5;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:5;;;4916:35;4968:19;;8866:68:1;4592:401:5;8866:68:1;-1:-1:-1;;;;;8952:16:1;;8944:64;;;;-1:-1:-1;;;8944:64:1;;5200:2:5;8944:64:1;;;5182:21:5;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:5;;;5322:33;5372:19;;8944:64:1;4998:399:5;8944:64:1;-1:-1:-1;;;;;9090:15:1;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;-1:-1:-1;;;9115:72:1;;5604:2:5;9115:72:1;;;5586:21:5;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:5;;;5726:36;5779:19;;9115:72:1;5402:402:5;9115:72:1;-1:-1:-1;;;;;9221:15:1;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;-1:-1:-1;;;;;9318:26:1;9327:4;-1:-1:-1;;;;;9318:26:1;;9337:6;9318:26;;;;1391:25:5;;1379:2;1364:18;;1245:177;9318:26:1;;;;;;;;9355:37;13059:121;14:597:5;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:5:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:5;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ce772700e6365d82f5db2f9ec1ff84c452ffed00710783249bcf6f8389bd67e64736f6c634300080a0033",
									".code": [
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12201,
											"end": 12206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12208,
											"end": 12215,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 55,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"simple-token(copy)/simple-token.sol": {
				"ast": {
					"absolutePath": "simple-token(copy)/simple-token.sol",
					"exportedSymbols": {
						"Context": [
							738
						],
						"ERC20": [
							613
						],
						"FixedToken": [
							27
						],
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 28,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1313:24:0"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 614,
							"src": "1339:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "1923:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "1923:5:0"
								}
							],
							"canonicalName": "FixedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "1409:489:0",
								"text": " @title Simple Token\n @author Breakthrough Labs Inc.\n @notice Token, ERC20, Fixed Supply\n @custom:version 1.0.7\n @custom:address 4\n @custom:default-precision 18\n @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n new tokens can never be created.\n @dev ERC20 token with the following features:\n  - Premint your total supply.\n  - No minting function. This allows users to comfortably know the future supply of the token."
							},
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								613,
								716,
								691,
								738
							],
							"name": "FixedToken",
							"nameLocation": "1909:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "2187:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2203:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2203:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 22,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2215:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 19,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2197:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "2197:30:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "1935:114:0",
										"text": " @param name Token Name\n @param symbol Token Symbol\n @param totalSupply Token Supply"
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 15,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "2173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 16,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 17,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 14,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "2167:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2167:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2089:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2075:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2117:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2103:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "2141:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2133:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:93:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:0"
									},
									"scope": 27,
									"src": "2054:180:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 28,
							"src": "1900:336:0",
							"usedErrors": []
						}
					],
					"src": "1313:925:0"
				},
				"id": 0
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							738
						],
						"ERC20": [
							613
						],
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:1"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 30,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 692,
							"src": "1403:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 717,
							"src": "1426:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 739,
							"src": "1468:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 738,
										"src": "2694:7:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "2694:7:1"
								},
								{
									"baseName": {
										"id": 36,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "2703:6:1"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "2703:6:1"
								},
								{
									"baseName": {
										"id": 38,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 716,
										"src": "2711:14:1"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "2711:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "1503:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613,
								716,
								691,
								738
							],
							"name": "ERC20",
							"nameLocation": "2685:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2768:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2732:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2740:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2732:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 41,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2751:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2840:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2784:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 48,
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2792:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2784:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 47,
											"keyType": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2811:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2803:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2822:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2874:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2858:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2858:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2908:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2893:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 52,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2893:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2919:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 54,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2919:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "3307:57:1",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "3317:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "3325:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3317:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "3317:13:1"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3340:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 68,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3340:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "3340:17:1"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2948:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 72,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3277:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3263:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3298:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3284:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3284:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:44:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:0:1"
									},
									"scope": 613,
									"src": "3251:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "3498:29:1",
										"statements": [
											{
												"expression": {
													"id": 79,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "3515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 78,
												"id": 80,
												"nodeType": "Return",
												"src": "3508:12:1"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "3370:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3438:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 75,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3465:8:1"
									},
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3483:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3483:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:15:1"
									},
									"scope": 613,
									"src": "3429:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3711:31:1",
										"statements": [
											{
												"expression": {
													"id": 89,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 55,
													"src": "3728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 88,
												"id": 90,
												"nodeType": "Return",
												"src": "3721:14:1"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3533:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3649:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 85,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3678:8:1"
									},
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3696:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3696:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:15:1"
									},
									"scope": 613,
									"src": "3640:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "4431:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4448:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 98,
												"id": 100,
												"nodeType": "Return",
												"src": "4441:9:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3748:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4375:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4406:8:1"
									},
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4424:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4424:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:7:1"
									},
									"scope": 613,
									"src": "4366:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "4587:36:1",
										"statements": [
											{
												"expression": {
													"id": 109,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "4604:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 110,
												"nodeType": "Return",
												"src": "4597:19:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4463:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4526:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:1"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4537:2:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4578:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:1"
									},
									"scope": 613,
									"src": "4517:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "4764:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 121,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "4781:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 123,
													"indexExpression": {
														"id": 122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4781:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 124,
												"nodeType": "Return",
												"src": "4774:25:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4629:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4690:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4737:8:1"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4708:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4700:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4755:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:9:1"
									},
									"scope": 613,
									"src": "4681:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "5087:104:1",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5105:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "5097:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5097:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 139,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5097:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "5145:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "5152:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "5156:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 142,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5135:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5135:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "5135:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 136,
												"id": 149,
												"nodeType": "Return",
												"src": "5173:11:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4812:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5011:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5063:8:1"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5040:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5032:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5019:28:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5081:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:6:1"
									},
									"scope": 613,
									"src": "5002:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										668
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "5347:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 162,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "5364:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 164,
														"indexExpression": {
															"id": 163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "5376:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5364:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 166,
													"indexExpression": {
														"id": 165,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5383:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5364:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "5357:34:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5197:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5258:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5320:8:1"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5276:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5268:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5291:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5283:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5267:32:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5337:9:1"
									},
									"scope": 613,
									"src": "5249:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5795:108:1",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5813:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "5805:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 180,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5805:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5821:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5805:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5852:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5868:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "5843:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5843:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5843:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5892:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 179,
												"id": 192,
												"nodeType": "Return",
												"src": "5885:11:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5404:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5715:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5748:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5740:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:33:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5789:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5789:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:6:1"
									},
									"scope": 613,
									"src": "5706:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										690
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6598:153:1",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6616:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "6608:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6608:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 209,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6626:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6626:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6608:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6664:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "6670:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6679:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "6648:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "6648:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6712:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6716:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 218,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6696:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6696:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 206,
												"id": 225,
												"nodeType": "Return",
												"src": "6733:11:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5909:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6474:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6574:8:1"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6504:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6496:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6526:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6518:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6546:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6538:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:72:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6592:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6591:6:1"
									},
									"scope": 613,
									"src": "6465:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7240:140:1",
										"statements": [
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7258:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "7250:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 237,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7250:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 239,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7266:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7250:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7297:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7304:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "7323:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 247,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "7330:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 245,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7313:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7313:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 249,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7341:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7313:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "7288:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7288:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "7288:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7369:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 236,
												"id": 254,
												"nodeType": "Return",
												"src": "7362:11:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6757:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7155:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7173:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7198:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7190:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7172:37:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7234:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:6:1"
									},
									"scope": 613,
									"src": "7146:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "7966:328:1",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7984:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "7976:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 266,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7976:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 268,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7992:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7992:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7976:28:1"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8022:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "8014:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 274,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "8051:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 273,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "8041:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8041:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8014:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8084:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 280,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "8104:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8121:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "8076:85:1"
											},
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "8171:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "8204:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 287,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8220:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 289,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "8239:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8220:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 285,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "8195:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8195:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 292,
														"nodeType": "ExpressionStatement",
														"src": "8195:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8283:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 295,
												"nodeType": "Return",
												"src": "8276:11:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "7386:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7876:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7902:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7894:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7919:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7911:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7911:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7893:42:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7960:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7960:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7959:6:1"
									},
									"scope": 613,
									"src": "7867:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "8856:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "8874:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8890:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8882:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8882:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8882:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8874:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8894:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8866:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8866:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "8866:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "8952:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8966:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8958:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 319,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8958:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8958:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8952:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8970:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "8944:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9040:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9046:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9050:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9019:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "9019:38:1"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9076:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "9068:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9068:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"baseExpression": {
														"id": 335,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "9090:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 337,
													"indexExpression": {
														"id": 336,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "9100:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9090:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9068:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "9123:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "9138:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9123:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9146:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9115:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9115:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9115:72:1"
											},
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "9197:73:1",
												"statements": [
													{
														"expression": {
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 346,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "9221:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 348,
																"indexExpression": {
																	"id": 347,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9231:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9221:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 349,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "9239:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 350,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "9253:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9239:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9221:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 353,
														"nodeType": "ExpressionStatement",
														"src": "9221:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 355,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9279:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9289:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 358,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "9296:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9279:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "9279:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 362,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9327:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9333:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9337:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9318:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9318:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "EmitStatement",
												"src": "9313:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9375:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9381:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9385:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 367,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "9355:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9355:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "9355:37:1"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "8300:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8757:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8784:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8776:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8826:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8818:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8766:72:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8856:0:1"
									},
									"scope": 613,
									"src": "8748:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "9740:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "9758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9777:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9769:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 384,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9769:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9769:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9758:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9781:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9750:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "9750:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9855:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9847:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9847:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9847:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9868:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9826:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9826:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "9826:49:1"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "9886:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 402,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "9902:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9886:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "9886:22:1"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 405,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9918:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 407,
														"indexExpression": {
															"id": 406,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9928:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9918:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 408,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "9940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9918:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "9918:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9978:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9970:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9970:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9970:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9991:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9961:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9961:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "EmitStatement",
												"src": "9956:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10029:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10029:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10029:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "10041:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "10050:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10009:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "10009:48:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "9405:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9684:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9698:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9690:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9715:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9707:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9689:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9740:0:1"
									},
									"scope": 613,
									"src": "9675:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "10449:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "10467:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10486:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10478:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10478:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10478:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10467:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10490:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10459:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10459:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "10459:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10575:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10567:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10567:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10567:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10579:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 448,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "10537:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10537:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "10537:49:1"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10605:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "10597:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"baseExpression": {
														"id": 459,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "10622:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 461,
													"indexExpression": {
														"id": 460,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "10632:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10622:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "10658:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 465,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "10676:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10658:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10684:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10650:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10650:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "10650:71:1"
											},
											{
												"id": 478,
												"nodeType": "UncheckedBlock",
												"src": "10731:79:1",
												"statements": [
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 470,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "10755:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 472,
																"indexExpression": {
																	"id": 471,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "10765:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10755:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "10776:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 474,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "10793:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10776:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10755:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "10755:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "10819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 480,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10835:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10819:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "10819:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 484,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10866:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10883:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10875:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10875:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10875:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10887:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10857:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10857:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "EmitStatement",
												"src": "10852:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10925:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10934:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10934:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10934:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10905:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10905:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "10905:48:1"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "10070:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10393:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10407:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10399:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10424:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10416:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10398:33:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10449:0:1"
									},
									"scope": 613,
									"src": "10384:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "11496:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "11514:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11531:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11523:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11523:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11523:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11514:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11535:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11506:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11506:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "11506:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "11592:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11611:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11603:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11603:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11603:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11592:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11615:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11584:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11584:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "11584:68:1"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 532,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "11663:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 535,
															"indexExpression": {
																"id": 533,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "11675:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11663:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 536,
														"indexExpression": {
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "11682:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11663:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "11693:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11663:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "11663:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 541,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "11723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "11730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "11739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "11714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11714:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "EmitStatement",
												"src": "11709:37:1"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "10966:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11392:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11418:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11410:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11441:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11433:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11400:78:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11496:0:1"
									},
									"scope": 613,
									"src": "11383:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "12154:321:1",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12172:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "12164:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "12201:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "12208:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 559,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "12191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12191:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12164:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "12230:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12255:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 566,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12255:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 565,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12250:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12250:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12250:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12230:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "12226:243:1",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "12269:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 572,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "12291:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 573,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "12311:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12291:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12319:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 571,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12283:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12283:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "ExpressionStatement",
															"src": "12283:68:1"
														},
														{
															"id": 586,
															"nodeType": "UncheckedBlock",
															"src": "12365:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 579,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "12402:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 580,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "12409:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 581,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "12418:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 582,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "12437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12418:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 578,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "12393:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12393:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 585,
																	"nodeType": "ExpressionStatement",
																	"src": "12393:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "11759:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12043:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12076:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12068:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12058:78:1"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12154:0:1"
									},
									"scope": 613,
									"src": "12034:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "13178:2:1",
										"statements": []
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "12481:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13068:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13106:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13098:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13128:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13120:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13120:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13148:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13088:72:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13178:0:1"
									},
									"scope": 613,
									"src": "13059:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "13886:2:1",
										"statements": []
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "13186:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13777:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13814:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13806:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13836:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13828:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13856:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13848:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:72:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13886:0:1"
									},
									"scope": 613,
									"src": "13768:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 614,
							"src": "2676:11214:1",
							"usedErrors": []
						}
					],
					"src": "1378:12513:1"
				},
				"id": 1
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							691
						]
					},
					"id": 692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1379:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 616,
								"nodeType": "StructuredDocumentation",
								"src": "1404:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 691,
							"linearizedBaseContracts": [
								691
							],
							"name": "IERC20",
							"nameLocation": "1485:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1498:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 625,
									"name": "Transfer",
									"nameLocation": "1667:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1692:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1676:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1714:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1698:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1726:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1718:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:57:2"
									},
									"src": "1661:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1739:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 634,
									"name": "Approval",
									"nameLocation": "1898:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1923:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1907:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1946:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1930:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:63:2"
									},
									"src": "1892:78:2"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1976:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2056:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:2:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2093:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:9:2"
									},
									"scope": 691,
									"src": "2047:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2108:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:17:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2244:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:9:2"
									},
									"scope": 691,
									"src": "2185:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2259:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2475:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2492:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2484:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2504:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2496:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:28:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2530:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2530:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:6:2"
									},
									"scope": 691,
									"src": "2466:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2542:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2820:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2838:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2830:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2853:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2845:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:32:2"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2885:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2884:9:2"
									},
									"scope": 691,
									"src": "2811:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2900:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3556:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3589:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3581:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:33:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3615:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3615:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:6:2"
									},
									"scope": 691,
									"src": "3547:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "3627:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3928:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3980:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3972:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4000:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3992:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:72:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4031:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4031:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:6:2"
									},
									"scope": 691,
									"src": "3919:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 692,
							"src": "1475:2564:2",
							"usedErrors": []
						}
					],
					"src": "1379:2661:2"
				},
				"id": 2
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1383:23:3"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 692,
							"src": "1408:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 696,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "1578:6:3"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "1578:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "1433:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								691
							],
							"name": "IERC20Metadata",
							"nameLocation": "1560:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1591:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1659:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1689:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1689:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1688:15:3"
									},
									"scope": 716,
									"src": "1650:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1710:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1780:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1786:2:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1812:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1812:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:15:3"
									},
									"scope": 716,
									"src": "1771:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1833:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1912:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1946:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 712,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1946:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:7:3"
									},
									"scope": 716,
									"src": "1903:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 717,
							"src": "1550:405:3",
							"usedErrors": []
						}
					],
					"src": "1383:573:3"
				},
				"id": 3
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							738
						]
					},
					"id": 739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1359:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "1384:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738
							],
							"name": "Context",
							"nameLocation": "1899:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1975:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 724,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1992:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1992:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 723,
												"id": 726,
												"nodeType": "Return",
												"src": "1985:17:4"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1922:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:2:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1966:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:9:4"
									},
									"scope": 738,
									"src": "1913:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2082:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 733,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2099:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2099:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 732,
												"id": 735,
												"nodeType": "Return",
												"src": "2092:15:4"
											}
										]
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2024:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:4"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2066:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:16:4"
									},
									"scope": 738,
									"src": "2015:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 739,
							"src": "1881:235:4",
							"usedErrors": []
						}
					],
					"src": "1359:758:4"
				},
				"id": 4
			}
		}
	}
}